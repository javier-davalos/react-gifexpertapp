{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gits","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACG,sBAAMC,SAbY,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQf,SACI,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAtBgB,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEqCC,UAAWH,GAFhD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeXM,GAfW,4CAAH,sDCDPO,EAAc,SAAC,GAAuB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGnC,OACI,sBAAMc,UAAU,yCAAhB,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAhBAC,qBAAW,WAEPxB,EAAUC,GACNwB,MAAO,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAKGqB,EDpByBK,CAAc1B,GAAlCa,EAHyB,EAG9BN,KAAaa,EAHiB,EAGjBA,QAGpB,OACG,qCACK,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGV,qBAAKA,UAAU,YAAf,SAIKH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIC,aEnBvBgB,EAAe,WAAO,IAAD,EAEOzC,mBAAS,CAAC,WAFjB,mBAEtB0C,EAFsB,KAEV3C,EAFU,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MClBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9eb99267.chunk.js","sourcesContent":["import  React, { useState } from 'react'; \r\n//import { from } from 'webpack-sources/lib/CompatSource';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        \r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n       if ( inputValue.trim().length > 2 ) {\r\n        setCategories( cats => [ inputValue, ...cats] );\r\n        setInputValue('');\r\n       }\r\n       \r\n       \r\n    }\r\n      \r\n     \r\n    return(\r\n       <form onSubmit={ handleSubmit}>\r\n           <input \r\n              type=\"text\"\r\n              value={ inputValue }\r\n              onChange={ handleInputChange }\r\n           />\r\n      </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=zzBrqQlY3yEjZBeb9RfZDp7wzYOXDjQt`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gits = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return  gits;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {  title, url } ) => {\r\n\r\n    \r\n    return (\r\n        <div  className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p> \r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    \r\n   const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n       <> \r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n           \r\n           { loading && <p className=\"animate__animated animate__flash\">loading</p>  }\r\n         \r\n\r\n            { <div className=\"card-grid\">\r\n               \r\n              \r\n                {  \r\n                   images.map( img => (\r\n                      <GifGridItem \r\n                          key={ img.id }\r\n                          { ...img }\r\n                      \r\n                      \r\n                      />\r\n                   ))\r\n                }\r\n               \r\n               \r\n            </div>}\r\n        </>\r\n    )  \r\n}\r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setstate] = useState( {\r\n        data: [],\r\n        loading: true \r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n       \r\n        getGifs ( category )\r\n           .then(  imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n           })\r\n    }, [category])\r\n\r\n    \r\n    \r\n \r\n    return state; //{ data:[], loading: true };\r\n\r\n\r\n}","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid }from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n     const [categories, setCategories] = useState(['Vegeta']);\r\n     \r\n     // const handleAdd = () => {\r\n     //   // setcategories( ['HunterXHunter', ...categories,] );\r\n     //    setCategories( cats => [ ...cats, 'HunterXHunter' ] );\r\n     //} \r\n     \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setCategories={ setCategories } /> \r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n               {\r\n                    categories.map( category => (\r\n                       <GifGrid \r\n                           key={ category }\r\n                           category={ category }\r\n                      />  \r\n                    ))\r\n               }\r\n            </ol>\r\n        \r\n        </>\r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />\n"],"sourceRoot":""}